/*
 * 代码生成器
 * 微服务工程代码生成器,生成Dao、Service、Controller、Pojo、Feign、Swagger的JSON脚本
 *
 * OpenAPI spec version: 1.0.0
 * Contact: shenkunlin@itcast.cn
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Para;
import io.swagger.client.model.Result;
import io.swagger.client.model.ResultListPara;
import io.swagger.client.model.ResultPara;
import org.junit.Ignore;
import org.junit.Test;

/**
 * API tests for ParaControllerApi
 */
@Ignore
public class ParaControllerApiTest {

    private final ParaControllerApi api = new ParaControllerApi();

    
    /**
     * 添加Para
     *
     * 添加Para方法详情
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addUsingPOSTTest() throws ApiException {
        Para body = null;
        Result response = api.addUsingPOST(body);

        // TODO: test validations
    }
    
    /**
     * 根据ID删除Para
     *
     * 根据ID删除Para方法详情
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUsingDELETETest() throws ApiException {
        Object id = null;
        Result response = api.deleteUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * 查询所有Para
     *
     * 查询所有Para方法详情
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findAllUsingGETTest() throws ApiException {
        ResultListPara response = api.findAllUsingGET();

        // TODO: test validations
    }
    
    /**
     * 根据ID查询Para
     *
     * 根据ID查询Para方法详情
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findByIdUsingGETTest() throws ApiException {
        Object id = null;
        ResultPara response = api.findByIdUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * 不带分页条件搜索Para
     *
     * 不带分页条件搜索Para方法详情
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findListUsingPOSTTest() throws ApiException {
        Para para = null;
        ResultListPara response = api.findListUsingPOST(para);

        // TODO: test validations
    }
    
    /**
     * 分页列表查询Para
     *
     * 分页列表查询Para方法详情
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findPageUsingGETTest() throws ApiException {
        Object page = null;
        Object size = null;
        ResultListPara response = api.findPageUsingGET(page, size);

        // TODO: test validations
    }
    
    /**
     * 分页条件搜索Para
     *
     * 分页条件搜索Para方法详情
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findPageUsingPOSTTest() throws ApiException {
        Object page = null;
        Object size = null;
        Para para = null;
        ResultListPara response = api.findPageUsingPOST(page, size, para);

        // TODO: test validations
    }
    
    /**
     * 根据ID修改Para
     *
     * 根据ID修改Para方法详情
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUsingPUTTest() throws ApiException {
        Object id = null;
        Para para = null;
        Result response = api.updateUsingPUT(id, para);

        // TODO: test validations
    }
    
}
